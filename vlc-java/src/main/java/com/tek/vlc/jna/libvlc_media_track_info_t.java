package com.tek.vlc.jna;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.Union;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class libvlc_media_track_info_t extends Structure {
    public int i_codec;
    public int i_id;
    /**
     * @see libvlc_track_type_t<br>
     * C type : libvlc_track_type_t
     */
    public int i_type;
    public int i_profile;
    public int i_level;
    /** C type : u_union */
    public u_union u;
    /** <i>native declaration : line 868</i> */
    public static class u_union extends Union {
        /** C type : audio_struct */
        public audio_struct audio;
        /** C type : video_struct */
        public video_struct video;
        /** <i>native declaration : line 869</i> */
        public static class audio_struct extends Structure {
            public int i_channels;
            public int i_rate;
            public audio_struct() {
                super();
            }
            protected List<? > getFieldOrder() {
                return Arrays.asList("i_channels", "i_rate");
            }
            public audio_struct(int i_channels, int i_rate) {
                super();
                this.i_channels = i_channels;
                this.i_rate = i_rate;
            }
            public audio_struct(Pointer peer) {
                super(peer);
            }
            public static class ByReference extends audio_struct implements Structure.ByReference {
                
            };
            public static class ByValue extends audio_struct implements Structure.ByValue {
                
            };
        };
        /** <i>native declaration : line 874</i> */
        public static class video_struct extends Structure {
            public int i_height;
            public int i_width;
            public video_struct() {
                super();
            }
            protected List<? > getFieldOrder() {
                return Arrays.asList("i_height", "i_width");
            }
            public video_struct(int i_height, int i_width) {
                super();
                this.i_height = i_height;
                this.i_width = i_width;
            }
            public video_struct(Pointer peer) {
                super(peer);
            }
            public static class ByReference extends video_struct implements Structure.ByReference {
                
            };
            public static class ByValue extends video_struct implements Structure.ByValue {
                
            };
        };
        public u_union() {
            super();
        }
        /** @param audio C type : audio_struct */
        public u_union(audio_struct audio) {
            super();
            this.audio = audio;
            setType(audio_struct.class);
        }
        /** @param video C type : video_struct */
        public u_union(video_struct video) {
            super();
            this.video = video;
            setType(video_struct.class);
        }
        public u_union(Pointer peer) {
            super(peer);
        }
        public static class ByReference extends u_union implements Structure.ByReference {
            
        };
        public static class ByValue extends u_union implements Structure.ByValue {
            
        };
    };
    public libvlc_media_track_info_t() {
        super();
    }
    protected List<? > getFieldOrder() {
        return Arrays.asList("i_codec", "i_id", "i_type", "i_profile", "i_level", "u");
    }
    /**
     * @param i_type @see libvlc_track_type_t<br>
     * C type : libvlc_track_type_t<br>
     * @param u C type : u_union
     */
    public libvlc_media_track_info_t(int i_codec, int i_id, int i_type, int i_profile, int i_level, u_union u) {
        super();
        this.i_codec = i_codec;
        this.i_id = i_id;
        this.i_type = i_type;
        this.i_profile = i_profile;
        this.i_level = i_level;
        this.u = u;
    }
    public libvlc_media_track_info_t(Pointer peer) {
        super(peer);
    }
    public static class ByReference extends libvlc_media_track_info_t implements Structure.ByReference {
        
    };
    public static class ByValue extends libvlc_media_track_info_t implements Structure.ByValue {
        
    };
}
